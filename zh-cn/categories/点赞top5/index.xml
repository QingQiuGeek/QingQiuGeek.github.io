<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>点赞top5 on 青秋博客</title>
        <link>/zh-cn/categories/%E7%82%B9%E8%B5%9Etop5/</link>
        <description>Recent content in 点赞top5 on 青秋博客</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>青秋博客</copyright>
        <lastBuildDate>Sun, 14 Jul 2024 18:14:45 +0000</lastBuildDate><atom:link href="/zh-cn/categories/%E7%82%B9%E8%B5%9Etop5/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Redis实现用户点赞、点赞top5用户排序</title>
        <link>/zh-cn/post/2024/07/redis%E5%AE%9E%E7%8E%B0%E7%94%A8%E6%88%B7%E7%82%B9%E8%B5%9E%E7%82%B9%E8%B5%9Etop5%E7%94%A8%E6%88%B7%E6%8E%92%E5%BA%8F/</link>
        <pubDate>Sun, 14 Jul 2024 18:14:45 +0000</pubDate>
        
        <guid>/zh-cn/post/2024/07/redis%E5%AE%9E%E7%8E%B0%E7%94%A8%E6%88%B7%E7%82%B9%E8%B5%9E%E7%82%B9%E8%B5%9Etop5%E7%94%A8%E6%88%B7%E6%8E%92%E5%BA%8F/</guid>
        <description>&lt;h2 id=&#34;案例需求&#34;&gt;&lt;a href=&#34;#%e6%a1%88%e4%be%8b%e9%9c%80%e6%b1%82&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;案例需求
&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://i-blog.csdnimg.cn/direct/9eee3a0877614bf987ede2353435e34d.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i-blog.csdnimg.cn/direct/70ca9991f90a43a5acad9aba1b3e55a9.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;方案分析&#34;&gt;&lt;a href=&#34;#%e6%96%b9%e6%a1%88%e5%88%86%e6%9e%90&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;方案分析
&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://i-blog.csdnimg.cn/direct/291089f6403e460da257327b26e8b728.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;一个用户对于一个blog只能点赞一次，如果只使用数据库完成该功能，那么用户每点赞一次都要查询、修改数据库，这样无疑增加了数据库的压力，那么引入redis，就可以使用redis的Sorted_Set集合解决该问题（中间件的引入当然是越少越好的，这样有利于系统的稳定性，那此处为了场景演示就引入redis了，毕竟现在有点规模的项目基本都离不开redis）&lt;/strong&gt;
&lt;strong&gt;redis的&lt;/strong&gt; &lt;strong&gt;Sorted_Set集合&lt;/strong&gt; &lt;strong&gt;集合中的元素具有唯一性、有序性，利用唯一性完成一个用户对于一个blog只能点赞一次，利用有序性完成点赞top5的用户排序，key是blog的id，value是用户id和用于排序的时间戳，如果该key的value中有当前登录用户的userId，那么说明该用户对该blog已点赞，那么可以利用该&lt;/strong&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;hr&gt;
</description>
        </item>
        
    </channel>
</rss>
